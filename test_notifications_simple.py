#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""

import requests
import json
import sys

def test_notifications():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ API"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    BASE_URL = "http://localhost:8000"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
    TELEGRAM_ID = 123456789  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à telegram_id
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    print(f"üì° URL: {BASE_URL}")
    print(f"üë§ Telegram ID: {TELEGRAM_ID}")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...")
    try:
        response = requests.get(f"{BASE_URL}/health")
        if response.status_code == 200:
            print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    print("\n2Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
    try:
        response = requests.post(
            f"{BASE_URL}/notifications/test/trigger-sync-events",
            params={"telegram_id": TELEGRAM_ID}
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            
            if result.get("success"):
                events_result = result.get("result", {})
                print(f"   - –°–æ–±—ã—Ç–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã: {events_result.get('events_processed', 0)}")
                print(f"   - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã: {events_result.get('notifications_sent', 0)}")
                print(f"   - –°–æ–±—ã—Ç–∏—è: {events_result.get('events', [])}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('message')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print("\n3Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
    try:
        test_data = {
            "notification_type": "test",
            "test_data": {
                "message": "–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
                "timestamp": "2024-01-01T12:00:00Z"
            }
        }
        
        response = requests.post(
            f"{BASE_URL}/notifications/test/test",
            params={"telegram_id": TELEGRAM_ID},
            json=test_data
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            
            if result.get("success"):
                print(f"   - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {result.get('notification_sent')}")
                print(f"   - Webhook URL: {result.get('webhook_url')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result.get('message')}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_notifications()
