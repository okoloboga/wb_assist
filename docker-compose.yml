version: "3.9"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - API_SECRET_KEY=${API_SECRET_KEY}
    networks:
      - app-network

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    depends_on:
      - server
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - SERVER_HOST=http://server:8000
      - API_SECRET_KEY=${API_SECRET_KEY}
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge