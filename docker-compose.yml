version: "3.9"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    # ports:
    #   - "${POSTGRES_PORT}:5432"  # Закрыто для безопасности - доступ только внутри Docker сети
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    # ports:
    #   - "6379:6379"  # Закрыто для безопасности - доступ только внутри Docker сети
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - API_SECRET_KEY=${API_SECRET_KEY}
      - REDIS_URL=redis://redis:6379/0
      # BOT_WEBHOOK_URL удален - используется только polling
    networks:
      - app-network

  celery-worker:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: python celery_worker.py
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - SYNC_INTERVAL=${SYNC_INTERVAL}
    networks:
      - app-network

  celery-beat:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: python celery_beat.py
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - SYNC_INTERVAL=${SYNC_INTERVAL}
    volumes:
      - celery_beat_data:/app/beat_data
    networks:
      - app-network

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    depends_on:
      - server
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - SERVER_HOST=http://server:8000
      - API_SECRET_KEY=${API_SECRET_KEY}
      - REQUEST_TIMEOUT=600
    networks:
      - app-network


volumes:
  pgdata:
  redis_data:
  celery_beat_data:

networks:
  app-network:
    driver: bridge
