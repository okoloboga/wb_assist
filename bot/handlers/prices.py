import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.insert(0, str(Path(__file__).parent.parent))

from aiogram import Router, F
from aiogram.types import CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command

from keyboards.keyboards import wb_menu_keyboard, main_keyboard, prices_keyboard
from utils.formatters import format_error_message

router = Router()


@router.callback_query(F.data == "my_prices")
async def show_my_prices(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–æ–∏ —Ü–µ–Ω—ã"""
    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω —á–µ—Ä–µ–∑ API
    await callback.message.edit_text(
        "üí≤ –ú–û–ò –¶–ï–ù–´\n\n"
        "‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ü–µ–Ω –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏.\n\n"
        "–°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤, –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ –æ—Ç–∑—ã–≤–æ–≤.",
        reply_markup=prices_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "competitor_prices")
async def show_competitor_prices(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ü–µ–Ω—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤"""
    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
    await callback.message.edit_text(
        "‚öñÔ∏è –¶–ï–ù–´ –ö–û–ù–ö–£–†–ï–ù–¢–û–í\n\n"
        "‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏.\n\n"
        "–°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤, –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ –æ—Ç–∑—ã–≤–æ–≤.",
        reply_markup=prices_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "price_history")
async def show_price_history(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–Ω"""
    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ü–µ–Ω
    await callback.message.edit_text(
        "üìä –ò–°–¢–û–†–ò–Ø –¶–ï–ù\n\n"
        "‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —Ü–µ–Ω –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏.\n\n"
        "–°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤, –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ –æ—Ç–∑—ã–≤–æ–≤.",
        reply_markup=prices_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "export_prices")
async def export_prices_to_google(callback: CallbackQuery):
    """–≠–∫—Å–ø–æ—Ä—Ç —Ü–µ–Ω –≤ Google Sheets"""
    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —ç–∫—Å–ø–æ—Ä—Ç –≤ Google Sheets
    await callback.message.edit_text(
        "üì§ –≠–ö–°–ü–û–†–¢ –í GOOGLE SHEETS\n\n"
        "‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ Google Sheets –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏.\n\n"
        "–°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤, –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ –æ—Ç–∑—ã–≤–æ–≤.",
        reply_markup=prices_keyboard()
    )
    await callback.answer()


@router.message(Command("prices"))
async def cmd_prices(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /prices"""
    await message.answer(
        "üí≤ –£–ü–†–ê–í–õ–ï–ù–ò–ï –¶–ï–ù–ê–ú–ò\n\n"
        "‚ö†Ô∏è –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–µ–Ω–∞–º–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏.\n\n"
        "–°–µ–π—á–∞—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤, –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ –æ—Ç–∑—ã–≤–æ–≤.",
        reply_markup=main_keyboard()
    )