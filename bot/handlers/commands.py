import sys
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.insert(0, str(Path(__file__).parent.parent))

from aiogram import Router, F
from aiogram.types import CallbackQuery, User, InlineKeyboardMarkup, InlineKeyboardButton, Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from utils.formatters import safe_edit_message, safe_send_message, handle_telegram_errors

logger = logging.getLogger(__name__)

from keyboards.keyboards import (
    main_keyboard,
    wb_menu_keyboard,
    analytics_keyboard,
    stock_keyboard,
    reviews_keyboard,
    prices_keyboard,
    content_keyboard,
    ai_assistant_keyboard,
    settings_keyboard
)

router = Router()

# –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ "–Ω–∞–∑–∞–¥"
navigation = {
    "orders": "wb_menu",
    "analytics": "wb_menu",
    "stock": "wb_menu",
    "reviews": "wb_menu",
    "prices": "wb_menu",
    "notifications": "wb_menu",
    "content": "wb_menu",
    "ai_assistant": "wb_menu",
    "settings": "wb_menu",
    "wb_menu": "main"
}

keyboards_map = {
    "main": main_keyboard,
    "wb_menu": wb_menu_keyboard,
    "prices": prices_keyboard,
    "content": content_keyboard,
    "ai_assistant": ai_assistant_keyboard,
    "settings": settings_keyboard
}

section_titles = {
    "main": "–Ø ‚Äî –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞–±–∏–Ω–µ—Ç–æ–º WildBerries.\n\n–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–∞–±–∏–Ω–µ—Ç, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
    "wb_menu": "‚úÖ –ö–∞–±–∏–Ω–µ—Ç '{user_name}'\n–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: 5 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —Å —á–µ–º —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å:",
    "orders": "üõí –ó–∞–∫–∞–∑—ã\n\n–ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –∏ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤.\n\n–ó–∞–≥—Ä—É–∂–∞—é –¥–∞–Ω–Ω—ã–µ...",
    "analytics": "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞\n\n–ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n- –í—ã—Ä—É—á–∫–∞: 123 456 ‚ÇΩ (+15%)\n- –ó–∞–∫–∞–∑—ã: 89 —à—Ç. (-5%)\n- –ö–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –∑–∞–∫–∞–∑: 4.2%\n\n–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–µ–µ?",
    "stock": "üì¶ –°–∫–ª–∞–¥\n\n–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Å—Ç–∞—Ç–∫–æ–≤: 1 234 567 ‚ÇΩ\n–¢–æ–≤–∞—Ä–æ–≤ –Ω–∞ –∏—Å—Ö–æ–¥–µ (–º–µ–Ω–µ–µ 7 –¥–Ω–µ–π): 5 —à—Ç.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
    "reviews": "‚≠ê –û—Ç–∑—ã–≤—ã\n\n–£ –≤–∞—Å 12 –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤.\n–¢—Ä–µ–±—É—é—Ç –æ—Ç–≤–µ—Ç–∞: 3 –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö (1-3‚≠ê)\n\n–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
    "prices": "üí∞ –¶–µ–Ω—ã –∏ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã\n\n–í—ã–≥–æ–¥–Ω–µ–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: 45 –ø–æ–∑–∏—Ü–∏–π\n–î–æ—Ä–æ–∂–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤: 12 –ø–æ–∑–∏—Ü–∏–π\n\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å:",
    "notifications": "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n\nReal-time —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–∞—Ö, –æ—Å—Ç–∞—Ç–∫–∞—Ö –∏ –æ—Ç–∑—ã–≤–∞—Ö.\n\n–ó–∞–≥—Ä—É–∂–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...",
    "content": "üé® –ö–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—É–¥–∏—è\n\n–ó–¥–µ—Å—å –º—ã –º–æ–∂–µ–º —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–¥–∞—é—â–∏–µ —Ç–µ–∫—Å—Ç—ã –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤–∞—à–∏—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ —Ç–æ–≤–∞—Ä–æ–≤. –ù–∞—á–Ω–µ–º —Ç–≤–æ—Ä–∏—Ç—å?",
    "ai_assistant": "ü§ñ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç\n\n–Ø –≥–æ—Ç–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ, –Ω–∞–π—Ç–∏ —Ç–æ—á–∫–∏ —Ä–æ—Å—Ç–∞ –∏–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –æ –≤–∞—à–µ–º –±–∏–∑–Ω–µ—Å–µ. –ü—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç–µ. –ù–∞–ø—Ä–∏–º–µ—Ä: '–ö–∞–∫–∏–µ 5 —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏–Ω–µ—Å–ª–∏ –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø—Ä–∏–±—ã–ª–∏ –∑–∞ –º–µ—Å—è—Ü?'",
    "settings": "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏\n\n–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º–∏, –¥–æ—Å—Ç—É–ø–∞–º–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏."
}


async def get_section_text(menu_name: str, user: User) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ –º–µ–Ω—é, —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É—è –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
    """
    text_template = section_titles.get(menu_name, "")

    if 'user_name' in text_template:
        user_name = f"{user.first_name} {user.last_name or ''}".strip()
        return text_template.format(user_name=user_name)
    
    return text_template


@router.callback_query(F.data == "connect_wb")
async def connect_wb_callback(callback: CallbackQuery):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
    from api.client import bot_api_client
    
    response = await bot_api_client.get_cabinet_status(
        user_id=callback.from_user.id
    )
    
    if response.success and response.data:
        # –ö–∞–±–∏–Ω–µ—Ç —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥ –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
        dashboard_response = await bot_api_client.get_dashboard(
            user_id=callback.from_user.id
        )
        
        if dashboard_response.success:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é
            await safe_edit_message(
                callback=callback,
                text=dashboard_response.telegram_text or "üìä –î–∞—à–±–æ—Ä–¥ –∑–∞–≥—Ä—É–∂–µ–Ω",
                reply_markup=wb_menu_keyboard(),
                user_id=callback.from_user.id
            )
        else:
            # –ï—Å–ª–∏ –¥–∞—à–±–æ—Ä–¥ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ –º–µ–Ω—é
            text = await get_section_text("wb_menu", callback.from_user)
            await safe_edit_message(
                callback=callback,
                text=text,
                reply_markup=wb_menu_keyboard(),
                user_id=callback.from_user.id
            )
    else:
        # –ö–∞–±–∏–Ω–µ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        await callback.message.edit_text(
            "üîë –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï WB –ö–ê–ë–ò–ù–ï–¢–ê\n\n"
            "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç Wildberries.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="üîë –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç",
                    callback_data="settings_api_key"
                )],
                [InlineKeyboardButton(
                    text="‚ÑπÔ∏è –ü–æ–º–æ—â—å",
                    callback_data="help"
                )]
            ])
        )
    
    await callback.answer()


@router.callback_query(F.data == "help")
async def help_callback(callback: CallbackQuery):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
    from api.client import bot_api_client
    
    response = await bot_api_client.get_cabinet_status(
        user_id=callback.from_user.id
    )
    
    if response.success and response.data:
        # –ö–∞–±–∏–Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥
        dashboard_response = await bot_api_client.get_dashboard(
            user_id=callback.from_user.id
        )
        
        if dashboard_response.success:
            await safe_edit_message(
                callback=callback,
                text=dashboard_response.telegram_text or "üìä –î–∞—à–±–æ—Ä–¥ –∑–∞–≥—Ä—É–∂–µ–Ω",
                reply_markup=wb_menu_keyboard(),
                user_id=callback.from_user.id
            )
        else:
            await safe_edit_message(
                callback=callback,
                text="‚úÖ –ö–∞–±–∏–Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=wb_menu_keyboard(),
                user_id=callback.from_user.id
            )
    else:
        # –ö–∞–±–∏–Ω–µ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        text = (
            "üîë –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï WB –ö–ê–ë–ò–ù–ï–¢–ê\n\n"
            "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç Wildberries.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        )
        await safe_edit_message(
            callback=callback,
            text=text,
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="üîë –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç",
                    callback_data="settings_api_key"
                )],
                [InlineKeyboardButton(
                    text="‚ÑπÔ∏è –ü–æ–º–æ—â—å",
                    callback_data="help"
                )]
            ]),
            user_id=callback.from_user.id
        )
    
    await callback.answer()


@router.callback_query(F.data == "main_menu")
async def main_menu_callback(callback: CallbackQuery):
    """–ü—Ä—è–º–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é' - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞—à–±–æ—Ä–¥"""
    logger.info(f"üîç DEBUG: –û–±—Ä–∞–±–æ—Ç–∫–∞ main_menu –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")
    
    from api.client import bot_api_client
    
    dashboard_response = await bot_api_client.get_dashboard(
        user_id=callback.from_user.id
    )
    
    if dashboard_response.success:
        await safe_edit_message(
            callback=callback,
            text=dashboard_response.telegram_text or "üìä –î–∞—à–±–æ—Ä–¥ –∑–∞–≥—Ä—É–∂–µ–Ω",
            reply_markup=wb_menu_keyboard(),
            user_id=callback.from_user.id
        )
    else:
        await safe_edit_message(
            callback=callback,
            text="‚úÖ –ö–∞–±–∏–Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=wb_menu_keyboard(),
            user_id=callback.from_user.id
        )
    
    await callback.answer()


@router.callback_query(F.data == "wb_menu")
async def wb_menu_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é' - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞—à–±–æ—Ä–¥"""
    logger.info(f"üîç DEBUG: –û–±—Ä–∞–±–æ—Ç–∫–∞ wb_menu –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")
    
    from api.client import bot_api_client
    
    dashboard_response = await bot_api_client.get_dashboard(
        user_id=callback.from_user.id
    )
    
    if dashboard_response.success:
        await safe_edit_message(
            callback=callback,
            text=dashboard_response.telegram_text or "üìä –î–∞—à–±–æ—Ä–¥ –∑–∞–≥—Ä—É–∂–µ–Ω",
            reply_markup=wb_menu_keyboard(),
            user_id=callback.from_user.id
        )
    else:
        await safe_edit_message(
            callback=callback,
            text="‚úÖ –ö–∞–±–∏–Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=wb_menu_keyboard(),
            user_id=callback.from_user.id
        )
    
    await callback.answer()


@router.callback_query(F.data.in_(["prices", "content", "ai_assistant", "settings"]))
async def menu_callback(callback: CallbackQuery):
    data = callback.data

    if data in keyboards_map:
        text = await get_section_text(data, callback.from_user)
        await safe_edit_message(
            callback=callback,
            text=text,
            reply_markup=keyboards_map[data](),
            user_id=callback.from_user.id
        )
        await callback.answer()

    elif data.startswith("back_"):
        target_menu = navigation.get(data.replace("back_", ""), "main")
        logger.info(f"üîç DEBUG: –û–±—Ä–∞–±–æ—Ç–∫–∞ back_ –¥–ª—è {data}, target_menu: {target_menu}")
        
        if data == "back_wb_menu" or target_menu == "wb_menu":
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥
            from api.client import bot_api_client
            
            dashboard_response = await bot_api_client.get_dashboard(
                user_id=callback.from_user.id
            )
            
            if dashboard_response.success:
                await safe_edit_message(
                    callback=callback,
                    text=dashboard_response.telegram_text or "üìä –î–∞—à–±–æ—Ä–¥ –∑–∞–≥—Ä—É–∂–µ–Ω",
                    reply_markup=wb_menu_keyboard(),
                    user_id=callback.from_user.id
                )
            else:
                text = await get_section_text(target_menu, callback.from_user)
                await safe_edit_message(
                    callback=callback,
                    text=text,
                    reply_markup=keyboards_map[target_menu](),
                    user_id=callback.from_user.id
                )
        else:
            text = await get_section_text(target_menu, callback.from_user)
            await safe_edit_message(
                callback=callback,
                text=text,
                reply_markup=keyboards_map[target_menu](),
                user_id=callback.from_user.id
            )
        await callback.answer()


# –ö–æ–º–∞–Ω–¥–∞ /webhook –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ handlers/webhook.py
