import sys
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.insert(0, str(Path(__file__).parent.parent))

from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.filters import Command

from api.client import bot_api_client
from keyboards.keyboards import wb_menu_keyboard, main_keyboard
from utils.formatters import format_error_message

logger = logging.getLogger(__name__)

router = Router()


@router.callback_query(F.data == "dashboard")
async def show_dashboard(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–∞—à–±–æ—Ä–¥ —Å –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –∫–∞–±–∏–Ω–µ—Ç—É"""
    logger.info(f"üîç DEBUG: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ dashboard –≤—ã–∑–≤–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")
    
    logger.info(f"üîç DEBUG: –í—ã–∑—ã–≤–∞–µ–º bot_api_client.get_dashboard —Å user_id={callback.from_user.id}")
    response = await bot_api_client.get_dashboard(
        user_id=callback.from_user.id
    )
    
    logger.info(f"üîç DEBUG: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç API: success={response.success}, status_code={response.status_code}")
    if response.error:
        logger.info(f"üîç DEBUG: –û—à–∏–±–∫–∞ API: {response.error}")
    
    if response.success:
        new_text = response.telegram_text or "üìä –î–∞—à–±–æ—Ä–¥ –∑–∞–≥—Ä—É–∂–µ–Ω"
        new_markup = wb_menu_keyboard()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        if (callback.message.text != new_text or 
            callback.message.reply_markup != new_markup):
            await callback.message.edit_text(
                new_text,
                reply_markup=new_markup
            )
        else:
            logger.info("üîç DEBUG: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    else:
        error_message = format_error_message(response.error, response.status_code)
        new_text = f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞:\n\n{error_message}"
        new_markup = main_keyboard()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        if (callback.message.text != new_text or 
            callback.message.reply_markup != new_markup):
            await callback.message.edit_text(
                new_text,
                reply_markup=new_markup
            )
        else:
            logger.info("üîç DEBUG: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
    
    await callback.answer()


@router.callback_query(F.data == "refresh_dashboard")
async def refresh_dashboard(callback: CallbackQuery):
    """–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞"""
    await callback.message.edit_text("‚è≥ –û–±–Ω–æ–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ...")
    
    response = await bot_api_client.get_dashboard(
        user_id=callback.from_user.id
    )
    
    if response.success:
        await callback.message.edit_text(
            response.telegram_text or "üìä –î–∞—à–±–æ—Ä–¥ –æ–±–Ω–æ–≤–ª–µ–Ω",
            reply_markup=wb_menu_keyboard()
        )
    else:
        error_message = format_error_message(response.error, response.status_code)
        await callback.message.edit_text(
            f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞:\n\n{error_message}",
            reply_markup=wb_menu_keyboard()
        )
    
    await callback.answer("‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")


@router.message(Command("dashboard"))
async def cmd_dashboard(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /dashboard"""
    response = await bot_api_client.get_dashboard(
        user_id=message.from_user.id
    )
    
    if response.success:
        await message.answer(
            response.telegram_text or "üìä –î–∞—à–±–æ—Ä–¥ –∑–∞–≥—Ä—É–∂–µ–Ω",
            reply_markup=wb_menu_keyboard()
        )
    else:
        error_message = format_error_message(response.error, response.status_code)
        await message.answer(
            f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞:\n\n{error_message}",
            reply_markup=main_keyboard()
        )