import sys
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.insert(0, str(Path(__file__).parent.parent))

from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.filters import Command

from api.client import bot_api_client
from keyboards.keyboards import wb_menu_keyboard, main_keyboard
from utils.formatters import format_error_message, safe_edit_message

logger = logging.getLogger(__name__)

router = Router()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ dashboard —É–±—Ä–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –∫–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –º–µ–Ω—é
# –î–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞ —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é


@router.callback_query(F.data == "refresh_dashboard")
async def refresh_dashboard(callback: CallbackQuery):
    """–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞"""
    await safe_edit_message(
        callback=callback,
        text="‚è≥ –û–±–Ω–æ–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ...",
        reply_markup=None,
        user_id=callback.from_user.id
    )
    
    response = await bot_api_client.get_dashboard(
        user_id=callback.from_user.id
    )
    
    if response.success:
        await safe_edit_message(
            callback=callback,
            text=response.telegram_text or "üìä –î–∞—à–±–æ—Ä–¥ –æ–±–Ω–æ–≤–ª–µ–Ω",
            reply_markup=wb_menu_keyboard(),
            user_id=callback.from_user.id
        )
    else:
        error_message = format_error_message(response.error, response.status_code)
        await safe_edit_message(
            callback=callback,
            text=f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞:\n\n{error_message}",
            reply_markup=wb_menu_keyboard(),
            user_id=callback.from_user.id
        )
    
    await callback.answer("‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")


@router.message(Command("dashboard"))
async def cmd_dashboard(message: Message):
    """–ö–æ–º–∞–Ω–¥–∞ /dashboard"""
    response = await bot_api_client.get_dashboard(
        user_id=message.from_user.id
    )
    
    if response.success:
        await message.answer(
            response.telegram_text or "üìä –î–∞—à–±–æ—Ä–¥ –∑–∞–≥—Ä—É–∂–µ–Ω",
            reply_markup=wb_menu_keyboard()
        )
    else:
        error_message = format_error_message(response.error, response.status_code)
        await message.answer(
            f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞:\n\n{error_message}",
            reply_markup=main_keyboard()
        )