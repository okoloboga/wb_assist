import sys
from pathlib import Path
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –±–æ—Ç–∞
sys.path.insert(0, str(Path(__file__).parent.parent))

from api.client import bot_api_client
from core.states import WBConnectionStates, WBCabinetStates
from keyboards.keyboards import wb_menu_keyboard, main_keyboard
from utils.formatters import format_error_message

router = Router()


@router.callback_query(F.data == "settings_api_key")
async def start_wb_connection(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π API –∫–ª—é—á –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∑–∞–º–µ–Ω—É"""
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–±–∏–Ω–µ—Ç–∞
    cabinet_status = await bot_api_client.get_cabinet_status(user_id=user_id)
    
    if cabinet_status.success and cabinet_status.data:
        cabinets = cabinet_status.data.get("cabinets", [])
        if cabinets:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π API –∫–ª—é—á
            cabinet = cabinets[0]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –∫–∞–±–∏–Ω–µ—Ç
            api_key = cabinet.get("api_key", "")
            cabinet_name = cabinet.get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
            status = cabinet.get("status", "unknown")
            connected_at = cabinet.get("connected_at", "")
            
            # –ú–∞—Å–∫–∏—Ä—É–µ–º API –∫–ª—é—á –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            masked_key = api_key[:8] + "..." + api_key[-4:] if len(api_key) > 12 else api_key[:4] + "..."
            
            await callback.message.edit_text(
                f"üîë –£–ü–†–ê–í–õ–ï–ù–ò–ï WB –ö–ê–ë–ò–ù–ï–¢–û–ú\n\n"
                f"üè¢ **–¢–µ–∫—É—â–∏–π –∫–∞–±–∏–Ω–µ—Ç:** {cabinet_name}\n"
                f"üîë **API –∫–ª—é—á:** `{masked_key}`\n"
                f"üìä **–°—Ç–∞—Ç—É—Å:** {status}\n"
                f"üìÖ **–ü–æ–¥–∫–ª—é—á–µ–Ω:** {connected_at}\n\n"
                f"üîÑ **–ó–ê–ú–ï–ù–ò–¢–¨ API –ö–õ–Æ–ß:**\n"
                f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å API –∫–ª—é—á, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á –≤ —á–∞—Ç.\n"
                f"–°—Ç–∞—Ä—ã–π –∫–ª—é—á –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω.\n\n"
                f"üìã **–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π API –∫–ª—é—á:**\n"
                f"1. –í–æ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç WB\n"
                f"2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' ‚Üí '–î–æ—Å—Ç—É–ø –∫ API'\n"
                f"3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á\n"
                f"4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ —Å—é–¥–∞\n\n"
                f"‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –ü—Ä–∏ –∑–∞–º–µ–Ω–µ –∫–ª—é—á–∞ —Å—Ç–∞—Ä—ã–π –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω!\n"
                f"‚ùå –î–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(
                        text="üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º",
                        callback_data="settings"
                    )]
                ]),
                parse_mode="Markdown"
            )
        else:
            # –ù–µ—Ç –∫–∞–±–∏–Ω–µ—Ç–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é
            await callback.message.edit_text(
                "üîë –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï WB –ö–ê–ë–ò–ù–ï–¢–ê\n\n"
                "–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–∞–±–∏–Ω–µ—Ç–∞ Wildberries –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á.\n\n"
                "üìã –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á:\n"
                "1. –í–æ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç WB\n"
                "2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª '–ù–∞—Å—Ç—Ä–æ–π–∫–∏' ‚Üí '–î–æ—Å—Ç—É–ø –∫ API'\n"
                "3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π\n"
                "4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ —Å—é–¥–∞\n\n"
                "‚ö†Ô∏è –ö–ª—é—á –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ\n"
                "‚ùå –î–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(
                        text="üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º",
                        callback_data="settings"
                    )]
                ])
            )
    else:
        # –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–±–∏–Ω–µ—Ç–µ\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º",
                    callback_data="settings"
                )]
            ])
        )
    
    await callback.answer()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∑–∞–º–µ–Ω—ã API –∫–ª—é—á–∞
    await state.set_state(WBConnectionStates.waiting_for_api_key)


@router.message(WBCabinetStates.waiting_for_api_key)
async def process_api_key_replacement(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–π API –∫–ª—é—á (–Ω–æ–≤—ã–π –∏–ª–∏ –∑–∞–º–µ–Ω—è—é—â–∏–π)"""
    api_key = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É
    if api_key.lower() in ['/cancel', '–æ—Ç–º–µ–Ω–∞', 'cancel']:
        await state.clear()
        await message.answer(
            "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="üîë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ API –∫–ª—é—á–æ–º",
                    callback_data="settings_api_key"
                )],
                [InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º",
                    callback_data="settings"
                )]
            ])
        )
        return
    
    # –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–ª—é—á–∞
    if len(api_key) < 10:
        await message.answer(
            "‚ùå API –∫–ª—é—á —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã:"
        )
        return
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    await state.set_state(WBCabinetStates.validating_key)
    await message.answer("‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é API –∫–ª—é—á...")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏/–∑–∞–º–µ–Ω—ã
    response = await bot_api_client.connect_wb_cabinet(
        user_id=message.from_user.id,
        api_key=api_key
    )
    
    if response.success:
        await state.clear()
        
        # –û—á–∏—â–∞–µ–º –∫—ç—à middleware –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            from __main__ import api_key_middleware
            api_key_middleware.clear_user_cache(message.from_user.id)
        except ImportError:
            # –ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
            pass
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –Ω–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ –∑–∞–º–µ–Ω–∞ API –∫–ª—é—á–∞
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ telegram_text –∏–ª–∏ –ø–æ –¥–∞–Ω–Ω—ã–º –æ—Ç–≤–µ—Ç–∞
        telegram_text = response.telegram_text or ""
        is_replacement = (
            "–æ–±–Ω–æ–≤–ª–µ–Ω" in telegram_text.lower() or 
            "–∑–∞–º–µ–Ω–µ–Ω" in telegram_text.lower() or
            "–∑–∞–º–µ–Ω" in telegram_text.lower()
        )
        
        if is_replacement:
            # –≠—Ç–æ –∑–∞–º–µ–Ω–∞ API –∫–ª—é—á–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            await message.answer(
                response.telegram_text or "‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!",
                reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(
                        text="üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º",
                        callback_data="settings"
                    )],
                    [InlineKeyboardButton(
                        text="üìä –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                        callback_data="main_menu"
                    )]
                ])
            )
        else:
            # –≠—Ç–æ –Ω–æ–≤–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
            await message.answer(
                response.telegram_text or "‚úÖ –ö–ê–ë–ò–ù–ï–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù!\n\nüîÑ –ó–∞–ø—É—Å–∫–∞—é –ø–µ—Ä–≤–∏—á–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö...\n‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 3-5 –º–∏–Ω—É—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.\nüìä –ó–∞–≥—Ä—É–∂–∞—é —Ç–æ–≤–∞—Ä—ã, –∑–∞–∫–∞–∑—ã, –æ—Å—Ç–∞—Ç–∫–∏ –∏ –æ—Ç–∑—ã–≤—ã...",
                reply_markup=None
            )
    else:
        await state.set_state(WBCabinetStates.connection_error)
        error_message = format_error_message(response.error, response.status_code)
        await message.answer(
            f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–∞–±–∏–Ω–µ—Ç–∞:\n\n{error_message}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã:",
            reply_markup=None
        )
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ–∂–∏–¥–∞–Ω–∏—é –∫–ª—é—á–∞
        await state.set_state(WBCabinetStates.waiting_for_api_key)


@router.message(WBConnectionStates.waiting_for_api_key)
async def process_api_key(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–µ–¥–µ–Ω–Ω—ã–π API –∫–ª—é—á"""
    api_key = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–º–µ–Ω—É
    if api_key.lower() in ['/cancel', '–æ—Ç–º–µ–Ω–∞', 'cancel']:
        await state.clear()
        await message.answer(
            "‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ\n\n"
            "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç Wildberries.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="üîë –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç",
                    callback_data="settings_api_key"
                )],
                [InlineKeyboardButton(
                    text="‚ÑπÔ∏è –ü–æ–º–æ—â—å",
                    callback_data="help"
                )]
            ])
        )
        return
    
    # –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–ª—é—á–∞
    if len(api_key) < 10:
        await message.answer(
            "‚ùå API –∫–ª—é—á —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã:"
        )
        return
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    await state.set_state(WBConnectionStates.validating_key)
    await message.answer("‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é API –∫–ª—é—á...")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    response = await bot_api_client.connect_wb_cabinet(
        user_id=message.from_user.id,
        api_key=api_key
    )
    
    if response.success:
        await state.set_state(WBConnectionStates.connection_success)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤–∏—á–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
        await message.answer(
            "üîÑ –ó–∞–ø—É—Å–∫–∞—é –ø–µ—Ä–≤–∏—á–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö...\n"
            "‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 3-5 –º–∏–Ω—É—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.\n"
            "üìä –ó–∞–≥—Ä—É–∂–∞—é —Ç–æ–≤–∞—Ä—ã, –∑–∞–∫–∞–∑—ã, –æ—Å—Ç–∞—Ç–∫–∏ –∏ –æ—Ç–∑—ã–≤—ã...",
            reply_markup=None
        )
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤–∏—á–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º
        sync_response = await bot_api_client.start_initial_sync(
            user_id=message.from_user.id
        )
        
        if sync_response.success:
            await message.answer(
                "‚úÖ –ö–∞–±–∏–Ω–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!\n"
                "üîÑ –ü–µ—Ä–≤–∏—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.\n"
                "üìä –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!\n\n"
                "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º!",
                reply_markup=wb_menu_keyboard()
            )
        elif sync_response.status_code == 408:  # Timeout
            await message.answer(
                "‚úÖ –ö–∞–±–∏–Ω–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!\n"
                "‚è≥ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, —á–µ–º –æ–∂–∏–¥–∞–ª–æ—Å—å.\n"
                "üìä –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.\n\n"
                "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º!",
                reply_markup=wb_menu_keyboard()
            )
        else:
            await message.answer(
                "‚úÖ –ö–∞–±–∏–Ω–µ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!\n"
                "‚ö†Ô∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∑–∂–µ.\n\n"
                "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º!",
                reply_markup=wb_menu_keyboard()
            )
        
        await state.clear()
    else:
        await state.set_state(WBConnectionStates.connection_error)
        error_message = format_error_message(response.error, response.status_code)
        await message.answer(
            f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–∞–±–∏–Ω–µ—Ç–∞:\n\n{error_message}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /cancel –¥–ª—è –æ—Ç–º–µ–Ω—ã:",
            reply_markup=None
        )
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ–∂–∏–¥–∞–Ω–∏—é –∫–ª—é—á–∞
        await state.set_state(WBConnectionStates.waiting_for_api_key)


@router.message(WBCabinetStates.connection_error)
async def handle_initial_connection_error(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–∏—á–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    await state.set_state(WBCabinetStates.waiting_for_api_key)
    await process_api_key_replacement(message, state)


@router.message(WBConnectionStates.connection_error)
async def handle_connection_error(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—à–∏–±–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤–≤–æ–¥—É –∫–ª—é—á–∞"""
    await state.set_state(WBConnectionStates.waiting_for_api_key)
    await process_api_key(message, state)


@router.callback_query(F.data == "check_cabinet_status")
async def check_cabinet_status(callback: CallbackQuery):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∫–∞–±–∏–Ω–µ—Ç–æ–≤"""
    response = await bot_api_client.get_cabinet_status(
        user_id=callback.from_user.id
    )
    
    if response.success:
        await callback.message.edit_text(
            response.telegram_text or "üìä –°—Ç–∞—Ç—É—Å –∫–∞–±–∏–Ω–µ—Ç–æ–≤ –ø–æ–ª—É—á–µ–Ω",
            reply_markup=wb_menu_keyboard()
        )
    else:
        error_message = format_error_message(response.error, response.status_code)
        await callback.message.edit_text(
            f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:\n\n{error_message}\n\n"
            "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç Wildberries.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="üîë –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç",
                    callback_data="settings_api_key"
                )],
                [InlineKeyboardButton(
                    text="‚ÑπÔ∏è –ü–æ–º–æ—â—å",
                    callback_data="help"
                )]
            ])
        )
    
    await callback.answer()


@router.callback_query(F.data == "cabinet_status")
async def cabinet_status_callback(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–∞–±–∏–Ω–µ—Ç–æ–≤ (–∞–ª–∏–∞—Å –¥–ª—è check_cabinet_status)"""
    await check_cabinet_status(callback)


@router.callback_query(F.data == "disconnect_cabinet")
async def disconnect_cabinet(callback: CallbackQuery):
    """–û—Ç–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç WB"""
    # TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–±–∏–Ω–µ—Ç–∞ —á–µ—Ä–µ–∑ API
    await callback.message.edit_text(
        "üîå –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï –ö–ê–ë–ò–ù–ï–¢–ê\n\n"
        "‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫–∞–±–∏–Ω–µ—Ç–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏.\n\n"
        "–î–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
        reply_markup=wb_menu_keyboard()
    )
    await callback.answer()


@router.message(Command("cancel"))
async def cancel_operation(message: Message, state: FSMContext):
    """–û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é"""
    current_state = await state.get_state()
    
    if current_state:
        await state.clear()
        await message.answer(
            "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞\n\n"
            "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç Wildberries.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="üîë –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç",
                    callback_data="settings_api_key"
                )],
                [InlineKeyboardButton(
                    text="‚ÑπÔ∏è –ü–æ–º–æ—â—å",
                    callback_data="help"
                )]
            ])
        )
    else:
        await message.answer(
            "‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã\n\n"
            "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç Wildberries.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(
                    text="üîë –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–∞–±–∏–Ω–µ—Ç",
                    callback_data="settings_api_key"
                )],
                [InlineKeyboardButton(
                    text="‚ÑπÔ∏è –ü–æ–º–æ—â—å",
                    callback_data="help"
                )]
            ])
        )