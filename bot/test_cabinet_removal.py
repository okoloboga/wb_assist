#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–±–∏–Ω–µ—Ç–æ–≤
"""

import asyncio
import json
import aiohttp
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_cabinet_removal_webhook():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–±–∏–Ω–µ—Ç–∞"""
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    webhook_data = {
        "type": "cabinet_removal",
        "telegram_id": 5101525651,  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        "timestamp": "2025-10-19T11:15:19.325Z",
        "data": {
            "cabinet_id": 5,
            "cabinet_name": "Test Webhook Cabinet",
            "user_id": 1,
            "telegram_id": 5101525651,
            "validation_error": {
                "valid": False,
                "message": "API validation error: Invalid API key",
                "status_code": None
            },
            "removal_reason": "API key invalid or withdrawn",
            "removal_timestamp": "2025-10-19T11:15:19.325Z"
        }
    }
    
    webhook_url = "http://localhost:8001/webhook/notifications"
    
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–±–∏–Ω–µ—Ç–∞")
    logger.info(f"üì§ URL: {webhook_url}")
    logger.info(f"üìã –î–∞–Ω–Ω—ã–µ: {json.dumps(webhook_data, indent=2, ensure_ascii=False)}")
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.post(
                webhook_url,
                json=webhook_data,
                headers={"Content-Type": "application/json"}
            ) as response:
                
                logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω webhook: {webhook_data['type']}")
                logger.info(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status}")
                
                response_text = await response.text()
                logger.info(f"üìã –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {response_text}")
                
                if response.status == 200:
                    logger.info("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
                else:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {response.status}")
                    
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ webhook: {e}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–±–∏–Ω–µ—Ç–∞")
    print("=" * 60)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    asyncio.run(test_cabinet_removal_webhook())
    
    print("=" * 60)
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
