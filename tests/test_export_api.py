#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —ç–∫—Å–ø–æ—Ä—Ç–∞ Google Sheets
"""

import asyncio
import aiohttp
import json

async def test_export_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —ç–∫—Å–ø–æ—Ä—Ç–∞"""
    base_url = "http://localhost:8000"
    
    async with aiohttp.ClientSession() as session:
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–∫—Å–ø–æ—Ä—Ç–∞ Google Sheets...")
        
        # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞...")
        try:
            async with session.get(f"{base_url}/api/export/health") as resp:
                if resp.status == 200:
                    data = await resp.json()
                    print(f"‚úÖ –°–µ—Ä–≤–∏—Å —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç: {data}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞: {resp.status}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
        try:
            async with session.get(f"{base_url}/api/export/sync-interval") as resp:
                if resp.status == 200:
                    data = await resp.json()
                    print(f"‚úÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {data}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞: {resp.status}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ (—Ç—Ä–µ–±—É–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–π cabinet_id)
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞...")
        try:
            token_data = {
                "user_id": 123456789,
                "cabinet_id": 1  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –∫–∞–±–∏–Ω–µ—Ç–∞
            }
            async with session.post(
                f"{base_url}/api/export/token",
                json=token_data
            ) as resp:
                if resp.status == 200:
                    data = await resp.json()
                    print(f"‚úÖ –¢–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω: {data['token'][:20]}...")
                else:
                    error_data = await resp.json()
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {resp.status} - {error_data}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ Google Sheets
        print("\n4Ô∏è‚É£ –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞ Google Sheets...")
        try:
            async with session.post(
                f"{base_url}/api/export/template/create",
                params={"template_name": "–¢–µ—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω"}
            ) as resp:
                if resp.status == 200:
                    data = await resp.json()
                    print(f"‚úÖ –®–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω: {data['template_url']}")
                else:
                    error_data = await resp.json()
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–∞: {resp.status} - {error_data}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_export_api())
