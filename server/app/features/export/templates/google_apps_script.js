/**
 * Google Apps Script –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö WB –≤ Google Sheets
 * –í–µ—Ä—Å–∏—è: 1.0.0
 * –ê–≤—Ç–æ—Ä: WB Assist
 */

function onOpen() {
  const ui = SpreadsheetApp.getUi();
  ui.createMenu('WB Assist')
    .addItem('üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ', 'updateAllData')
    .addItem('üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ', 'checkConnection')
    .addItem('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'showSettings')
    .addItem('‚ùì –°–ø—Ä–∞–≤–∫–∞', 'showHelp')
    .addToUi();
}

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
 */
function updateAllData() {
  try {
    const settings = getSettings();
    if (!settings.cabinetId || !settings.token) {
      SpreadsheetApp.getUi().alert(
        '–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', 
        '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã ID –∫–∞–±–∏–Ω–µ—Ç–∞ –∏–ª–∏ Token Export. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è.', 
        SpreadsheetApp.getUi().ButtonSet.OK
      );
      return;
    }
    
    SpreadsheetApp.getActiveSpreadsheet().toast('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...', 'WB Assist', 3);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
    updateOrders(settings);
    updateStocks(settings);
    updateReviews(settings);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
    updateConnectionStatus('‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ', new Date());
    
    SpreadsheetApp.getActiveSpreadsheet().toast('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!', 'WB Assist', 3);
    
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', error);
    updateConnectionStatus('‚ùå –û—à–∏–±–∫–∞: ' + error.message, new Date());
    SpreadsheetApp.getUi().alert(
      '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', 
      '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: ' + error.message, 
      SpreadsheetApp.getUi().ButtonSet.OK
    );
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ª–∏—Å—Ç–∞ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
 */
function getSettings() {
  const settingsSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
  if (!settingsSheet) {
    throw new Error('–õ–∏—Å—Ç "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
  
  return {
    cabinetId: settingsSheet.getRange('B1').getValue(),
    token: settingsSheet.getRange('B2').getValue()
  };
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
 */
function checkConnection() {
  try {
    const settings = getSettings();
    if (!settings.cabinetId || !settings.token) {
      updateConnectionStatus('‚ö†Ô∏è –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ', new Date());
      return false;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
    const response = UrlFetchApp.fetch('https://your-api-domain.com/api/export/health', {
      method: 'GET',
      headers: {
        'User-Agent': 'WB-Assist-GoogleSheets/1.0'
      }
    });
    
    if (response.getResponseCode() === 200) {
      updateConnectionStatus('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ', new Date());
      return true;
    } else {
      updateConnectionStatus('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è', new Date());
      return false;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
    updateConnectionStatus('‚ùå –û—à–∏–±–∫–∞: ' + error.message, new Date());
    return false;
  }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–æ–≤
 */
function updateOrders(settings) {
  try {
    const url = `https://your-api-domain.com/api/export/orders/${settings.cabinetId}?token=${settings.token}&limit=1000`;
    const response = UrlFetchApp.fetch(url, {
      method: 'GET',
      headers: {
        'User-Agent': 'WB-Assist-GoogleSheets/1.0',
        'Accept': 'application/json'
      }
    });
    
    if (response.getResponseCode() !== 200) {
      throw new Error(`–û—à–∏–±–∫–∞ API: ${response.getResponseCode()}`);
    }
    
    const data = JSON.parse(response.getContentText());
    
    if (data.data && data.data.length > 0) {
      const ordersSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('üõí –ó–∞–∫–∞–∑—ã');
      if (!ordersSheet) {
        throw new Error('–õ–∏—Å—Ç "–ó–∞–∫–∞–∑—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–∫—Ä–æ–º–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)
      const lastRow = ordersSheet.getLastRow();
      if (lastRow > 1) {
        ordersSheet.getRange(2, 1, lastRow - 1, ordersSheet.getLastColumn()).clear();
      }
      
      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      const values = data.data.map(row => [
        row.order_id || '',
        row.article || '',
        row.name || '',
        row.size || '',
        row.quantity || 0,
        row.price || 0,
        row.total_price || 0,
        row.status || '',
        row.order_date || '',
        row.warehouse_from || '',
        row.warehouse_to || '',
        row.commission_amount || 0,
        row.spp_percent || 0,
        row.customer_price || 0,
        row.discount_percent || 0
      ]);
      
      if (values.length > 0) {
        ordersSheet.getRange(2, 1, values.length, values[0].length).setValues(values);
      }
      
      console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: ${values.length}`);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤:', error);
    throw error;
  }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–æ–≤
 */
function updateStocks(settings) {
  try {
    const url = `https://your-api-domain.com/api/export/stocks/${settings.cabinetId}?token=${settings.token}&limit=1000`;
    const response = UrlFetchApp.fetch(url, {
      method: 'GET',
      headers: {
        'User-Agent': 'WB-Assist-GoogleSheets/1.0',
        'Accept': 'application/json'
      }
    });
    
    if (response.getResponseCode() !== 200) {
      throw new Error(`–û—à–∏–±–∫–∞ API: ${response.getResponseCode()}`);
    }
    
    const data = JSON.parse(response.getContentText());
    
    if (data.data && data.data.length > 0) {
      const stocksSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('üì¶ –°–∫–ª–∞–¥');
      if (!stocksSheet) {
        throw new Error('–õ–∏—Å—Ç "–°–∫–ª–∞–¥" –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–∫—Ä–æ–º–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)
      const lastRow = stocksSheet.getLastRow();
      if (lastRow > 1) {
        stocksSheet.getRange(2, 1, lastRow - 1, stocksSheet.getLastColumn()).clear();
      }
      
      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      const values = data.data.map(row => [
        row.article || '',
        row.name || '',
        row.brand || '',
        row.size || '',
        row.warehouse_name || '',
        row.quantity || 0,
        row.in_way_to_client || 0,
        row.in_way_from_client || 0,
        row.price || 0,
        row.discount || 0,
        row.last_updated || ''
      ]);
      
      if (values.length > 0) {
        stocksSheet.getRange(2, 1, values.length, values[0].length).setValues(values);
      }
      
      console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–æ –æ—Å—Ç–∞—Ç–∫–æ–≤: ${values.length}`);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤:', error);
    throw error;
  }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–æ–≤
 */
function updateReviews(settings) {
  try {
    const url = `https://your-api-domain.com/api/export/reviews/${settings.cabinetId}?token=${settings.token}&limit=1000`;
    const response = UrlFetchApp.fetch(url, {
      method: 'GET',
      headers: {
        'User-Agent': 'WB-Assist-GoogleSheets/1.0',
        'Accept': 'application/json'
      }
    });
    
    if (response.getResponseCode() !== 200) {
      throw new Error(`–û—à–∏–±–∫–∞ API: ${response.getResponseCode()}`);
    }
    
    const data = JSON.parse(response.getContentText());
    
    if (data.data && data.data.length > 0) {
      const reviewsSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚≠ê –û—Ç–∑—ã–≤—ã');
      if (!reviewsSheet) {
        throw new Error('–õ–∏—Å—Ç "–û—Ç–∑—ã–≤—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–∫—Ä–æ–º–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)
      const lastRow = reviewsSheet.getLastRow();
      if (lastRow > 1) {
        reviewsSheet.getRange(2, 1, lastRow - 1, reviewsSheet.getLastColumn()).clear();
      }
      
      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      const values = data.data.map(row => [
        row.review_id || '',
        row.nm_id || '',
        row.product_name || '',
        row.rating || 0,
        row.text || '',
        row.pros || '',
        row.cons || '',
        row.user_name || '',
        row.color || '',
        row.matching_size || '',
        row.created_date || '',
        row.is_answered || false,
        row.was_viewed || false
      ]);
      
      if (values.length > 0) {
        reviewsSheet.getRange(2, 1, values.length, values[0].length).setValues(values);
      }
      
      console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: ${values.length}`);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤:', error);
    throw error;
  }
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
 */
function updateConnectionStatus(status, timestamp) {
  try {
    const settingsSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏');
    if (settingsSheet) {
      settingsSheet.getRange('B3').setValue(status);
      settingsSheet.getRange('B4').setValue(timestamp);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
  }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 */
function showSettings() {
  const ui = SpreadsheetApp.getUi();
  const settings = getSettings();
  
  ui.alert(
    '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ WB Assist',
    `ID –∫–∞–±–∏–Ω–µ—Ç–∞: ${settings.cabinetId || '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ'}\\n` +
    `Token Export: ${settings.token ? '–ó–∞–ø–æ–ª–Ω–µ–Ω' : '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω'}\\n\\n` +
    '–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —è—á–µ–π–∫–∏ B1 –∏ B2 –≤ –ª–∏—Å—Ç–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"',
    ui.ButtonSet.OK
  );
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É
 */
function showHelp() {
  const ui = SpreadsheetApp.getUi();
  ui.alert(
    '–°–ø—Ä–∞–≤–∫–∞ WB Assist',
    'üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:\\n\\n' +
    '1. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ ID –∫–∞–±–∏–Ω–µ—Ç–∞ –∏ Token Export –≤ –ª–∏—Å—Ç–µ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"\\n' +
    '2. –ù–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö\\n' +
    '3. –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤\\n' +
    '4. –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"\\n\\n' +
    'üîß –ü–æ–¥–¥–µ—Ä–∂–∫–∞: @wb_assist_bot',
    ui.ButtonSet.OK
  );
}

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –∏–∑ SYNC_INTERVAL
 */
function createTrigger() {
  try {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
    deleteTrigger();
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ API
    const syncInterval = getSyncInterval();
    
    if (syncInterval) {
      // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
      ScriptApp.newTrigger('updateAllData')
        .timeBased()
        .everyMinutes(syncInterval)
        .create();
      
      console.log(`–¢—Ä–∏–≥–≥–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º ${syncInterval} –º–∏–Ω—É—Ç`);
    } else {
      // Fallback –Ω–∞ 6 —á–∞—Å–æ–≤, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª
      ScriptApp.newTrigger('updateAllData')
        .timeBased()
        .everyHours(6)
        .create();
      
      console.log('–¢—Ä–∏–≥–≥–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 6 —á–∞—Å–æ–≤ (fallback)');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞:', error);
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑ API —Å–µ—Ä–≤–µ—Ä–∞
 */
function getSyncInterval() {
  try {
    const response = UrlFetchApp.fetch('https://your-api-domain.com/api/export/sync-interval', {
      method: 'GET',
      headers: {
        'User-Agent': 'WB-Assist-GoogleSheets/1.0',
        'Accept': 'application/json'
      }
    });
    
    if (response.getResponseCode() === 200) {
      const data = JSON.parse(response.getContentText());
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å–µ–∫—É–Ω–¥—ã –≤ –º–∏–Ω—É—Ç—ã –¥–ª—è Google Apps Script
      return Math.max(1, Math.floor(data.sync_interval_seconds / 60));
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
  }
  
  return null; // Fallback –Ω–∞ 6 —á–∞—Å–æ–≤
}

/**
 * –£–¥–∞–ª—è–µ—Ç —Ç—Ä–∏–≥–≥–µ—Ä—ã
 */
function deleteTrigger() {
  try {
    const triggers = ScriptApp.getProjectTriggers();
    triggers.forEach(trigger => {
      if (trigger.getHandlerFunction() === 'updateAllData') {
        ScriptApp.deleteTrigger(trigger);
      }
    });
    
    console.log('–°—Ç–∞—Ä—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤:', error);
  }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
 */
function initialize() {
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    createTrigger();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    checkConnection();
    
    console.log('WB Assist –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
  }
}
