#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets API
"""

import os
import sys
from datetime import datetime
from google.oauth2 import service_account
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

def load_credentials():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞"""
    try:
        from dotenv import load_dotenv
        load_dotenv()
    except ImportError:
        print("‚ö†Ô∏è  python-dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–ª—é—á–∞
    key_file = os.getenv('GOOGLE_SERVICE_ACCOUNT_FILE', 'server/config/wb-assist-352ded7b5635.json')
    scopes = os.getenv('GOOGLE_SCOPES', 'https://www.googleapis.com/auth/spreadsheets').split(',')
    
    print(f"üîë –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á –∏–∑: {key_file}")
    print(f"üìã Scopes: {scopes}")
    
    if not os.path.exists(key_file):
        print(f"‚ùå –§–∞–π–ª –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {key_file}")
        return None, None
    
    try:
        credentials = service_account.Credentials.from_service_account_file(
            key_file, 
            scopes=scopes
        )
        print("‚úÖ –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        return credentials, scopes
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None, None

def test_google_sheets_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets API"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Google Sheets API...")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    credentials, scopes = load_credentials()
    if not credentials:
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        print("üîß –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Google Sheets...")
        service = build('sheets', 'v4', credentials=credentials)
        print("‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç 1: –†–∞–±–æ—Ç–∞ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü–µ–π
        print("\nüìä –¢–µ—Å—Ç 1: –†–∞–±–æ—Ç–∞ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü–µ–π...")
        existing_spreadsheet_id = "1ElbYUDv0hesvYx4h6s_8L6EQzQtoPu5mqcndt2-ATJc"
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ
            spreadsheet_info = service.spreadsheets().get(spreadsheetId=existing_spreadsheet_id).execute()
            print(f"‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ –ø–æ–ª—É—á–µ–Ω: {spreadsheet_info['properties']['title']}")
            print(f"üîó –°—Å—ã–ª–∫–∞: https://docs.google.com/spreadsheets/d/{existing_spreadsheet_id}")
        except HttpError as e:
            if e.resp.status == 403:
                print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Service Account –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É.")
                print(f"üìß Email Service Account: {credentials.service_account_email}")
                return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ: {e}")
                return False
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤
        sheets = spreadsheet_info.get('sheets', [])
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ –ª–∏—Å—Ç–æ–≤: {len(sheets)}")
        for sheet in sheets:
            print(f"  - {sheet['properties']['title']}")
        
        # –¢–µ—Å—Ç 2: –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        print("\nüìä –¢–µ—Å—Ç 2: –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")
        range_name = f"{sheets[0]['properties']['title']}!A1:Z10"
        result = service.spreadsheets().values().get(
            spreadsheetId=existing_spreadsheet_id,
            range=range_name
        ).execute()
        
        values = result.get('values', [])
        print(f"‚úÖ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫: {len(values)}")
        if values:
            print(f"üìù –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞: {values[0]}")
        
        # –¢–µ—Å—Ç 3: –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö
        print("\nüìä –¢–µ—Å—Ç 3: –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö...")
        test_data = [
            ['–¢–µ—Å—Ç', '–î–∞–Ω–Ω—ã–µ', 'WB Assist'],
            ['–í—Ä–µ–º—è', datetime.now().strftime('%Y-%m-%d %H:%M:%S'), ''],
            ['–°—Ç–∞—Ç—É—Å', '–£—Å–ø–µ—à–Ω–æ', '‚úÖ']
        ]
        
        body = {
            'values': test_data
        }
        
        result = service.spreadsheets().values().update(
            spreadsheetId=existing_spreadsheet_id,
            range=f"{sheets[0]['properties']['title']}!A1:C3",
            valueInputOption='RAW',
            body=body
        ).execute()
        
        print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã: {result['updatedCells']} —è—á–µ–µ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏—Å—Ç–æ–≤
        print("\nüìä –¢–µ—Å—Ç 4: –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏—Å—Ç–æ–≤...")
        requests = [
            {
                'addSheet': {
                    'properties': {
                        'title': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'
                    }
                }
            },
            {
                'addSheet': {
                    'properties': {
                        'title': '–°–∫–ª–∞–¥'
                    }
                }
            },
            {
                'addSheet': {
                    'properties': {
                        'title': '–ó–∞–∫–∞–∑—ã'
                    }
                }
            },
            {
                'addSheet': {
                    'properties': {
                        'title': '–û—Ç–∑—ã–≤—ã'
                    }
                }
            }
        ]
        
        body = {
            'requests': requests
        }
        
        result = service.spreadsheets().batchUpdate(
            spreadsheetId=existing_spreadsheet_id,
            body=body
        ).execute()
        
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ –ª–∏—Å—Ç–æ–≤: {len(result['replies'])}")
        
        # –¢–µ—Å—Ç 5: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        print("\nüìä –¢–µ—Å—Ç 5: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
        format_requests = [
            {
                'repeatCell': {
                    'range': {
                        'sheetId': 0,
                        'startRowIndex': 0,
                        'endRowIndex': 1
                    },
                    'cell': {
                        'userEnteredFormat': {
                            'backgroundColor': {
                                'red': 0.2,
                                'green': 0.6,
                                'blue': 0.9
                            },
                            'textFormat': {
                                'bold': True,
                                'foregroundColor': {
                                    'red': 1.0,
                                    'green': 1.0,
                                    'blue': 1.0
                                }
                            }
                        }
                    },
                    'fields': 'userEnteredFormat(backgroundColor,textFormat)'
                }
            }
        ]
        
        body = {
            'requests': format_requests
        }
        
        result = service.spreadsheets().batchUpdate(
            spreadsheetId=existing_spreadsheet_id,
            body=body
        ).execute()
        
        print("‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ")
        
        print("\n" + "=" * 50)
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print(f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É: https://docs.google.com/spreadsheets/d/{existing_spreadsheet_id}")
        print("=" * 50)
        
        return True
        
    except HttpError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Google Sheets API: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Google Sheets API –¥–ª—è WB Assist")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    try:
        import google.auth
        import googleapiclient
        print("‚úÖ Google API –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except ImportError as e:
        print(f"‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {e}")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = test_google_sheets_connection()
    
    if success:
        print("\n‚úÖ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ —Å Google Sheets!")
        print("üöÄ –ú–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö")
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")

if __name__ == "__main__":
    main()
